definitions:
  models.Comment:
    properties:
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      photo:
        $ref: '#/definitions/models.Photo'
      photo_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.Photo:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.SocialMedia:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      age:
        type: integer
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      photos:
        items:
          $ref: '#/definitions/models.Photo'
        type: array
      social_medias:
        items:
          $ref: '#/definitions/models.SocialMedia'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user using email and password
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login using user account
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: Register user using email
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: User registration
      tags:
      - User
swagger: "2.0"
